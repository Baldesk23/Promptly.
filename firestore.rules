
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;
    }
    match /prompts/{promptId} {
      allow read: if resource.data.public == true || request.auth != null;
      allow create: if request.auth != null
        && request.resource.data.ownerId == request.auth.uid
        && request.resource.data.keys().hasAll(['promptText','title','ownerId','createdAt','status']);
      allow update: if request.auth != null && (
         resource.data.ownerId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true
      );
      allow delete: if request.auth != null && (
         resource.data.ownerId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true
      );
    }
    match /reports/{reportId} {
      allow create: if request.auth != null && request.resource.data.reporterId == request.auth.uid;
      allow read, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}
